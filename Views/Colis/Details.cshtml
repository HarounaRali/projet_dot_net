@model SuiviLivraison.Models.Colis
@{
    ViewData["Title"] = "Détails du Colis";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-box"></i> Détails du Colis #@Model.Id</h2>
        <div>
            <a asp-action="MesColis" class="btn btn-outline-secondary me-2">
                <i class="fas fa-arrow-left"></i> Retour à mes colis
            </a>
            <a asp-action="Notifications" class="btn btn-outline-info">
                <i class="fas fa-bell"></i> Notifications
            </a>
        </div>
    </div>

    <div class="row">
        <!-- Informations principales -->
        <div class="col-md-8">
            <!-- Statut et informations générales -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-info-circle"></i> Informations Générales</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold">Statut</label>
                                <div>
                                    <span class="badge @GetStatusColor(Model.Statut) fs-6">@Model.Statut</span>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-bold">Description</label>
                                <p class="form-control-plaintext">@Model.Description</p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-bold">Date d'envoi</label>
                                <p class="form-control-plaintext">
                                    @if (Model.DateEnvoi.HasValue)
                                    {
                                        @Model.DateEnvoi.Value.ToString("dd/MM/yyyy à HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Non définie</span>
                                    }
                                </p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold">Livreur assigné</label>
                                <p class="form-control-plaintext">
                                    @if (Model.Livreur != null)
                                    {
                                        <span>@Model.Livreur.Nom</span>
                                        <br>
                                        <small class="text-muted">@Model.Livreur.Telephone</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Aucun livreur assigné</span>
                                    }
                                </p>
                            </div>
                            <div class="mb-3">
                                <label class="form-label fw-bold">Heure de livraison estimée</label>
                                <p class="form-control-plaintext">
                                    @if (Model.HeureLivraisonEstimee.HasValue)
                                    {
                                        @Model.HeureLivraisonEstimee.Value.ToString("dd/MM/yyyy à HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Non définie</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Position actuelle -->
            @if (Model.Latitude != 0 && Model.Longitude != 0)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-map-marker-alt"></i> Position Actuelle</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Latitude</label>
                                    <p class="form-control-plaintext">@Model.Latitude</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label fw-bold">Longitude</label>
                                    <p class="form-control-plaintext">@Model.Longitude</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Adresses -->
            @if (!string.IsNullOrEmpty(Model.AdresseDepart) || !string.IsNullOrEmpty(Model.AdresseArrivee))
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-map"></i> Adresses</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @if (!string.IsNullOrEmpty(Model.AdresseDepart))
                            {
                                <div class="col-md-6">
                                    <div class="border-start border-success border-4 ps-3">
                                        <label class="form-label fw-bold text-success">
                                            <i class="fas fa-map-marker-alt"></i> Point de départ
                                        </label>
                                        <p class="form-control-plaintext">@Model.AdresseDepart</p>
                                        <small class="text-muted">
                                            Coordonnées: @Model.LatitudeDepart, @Model.LongitudeDepart
                                        </small>
                                    </div>
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.AdresseArrivee))
                            {
                                <div class="col-md-6">
                                    <div class="border-start border-warning border-4 ps-3">
                                        <label class="form-label fw-bold text-warning">
                                            <i class="fas fa-flag-checkered"></i> Point d'arrivée
                                        </label>
                                        <p class="form-control-plaintext">@Model.AdresseArrivee</p>
                                        <small class="text-muted">
                                            Coordonnées: @Model.LatitudeArrivee, @Model.LongitudeArrivee
                                        </small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Carte interactive -->
            @if (Model.Latitude != 0 && Model.Longitude != 0)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="fas fa-map"></i> Localisation</h5>
                    </div>
                    <div class="card-body">
                        <div id="map" style="height: 400px; border-radius: 8px;"></div>
                    </div>
                </div>
            }
        </div>

        <!-- Notifications -->
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-bell"></i> Notifications</h5>
                </div>
                <div class="card-body">
                    @if (Model.Notifications != null && Model.Notifications.Any())
                    {
                        <div class="timeline">
                            @foreach (var notif in Model.Notifications.OrderByDescending(n => n.DateEnvoi))
                            {
                                <div class="timeline-item mb-3">
                                    <div class="timeline-marker bg-info"></div>
                                    <div class="timeline-content">
                                        <div class="card border-0 bg-light">
                                            <div class="card-body p-3">
                                                <p class="mb-1">@notif.Message</p>
                                                <small class="text-muted">
                                                    <i class="fas fa-clock"></i> 
                                                    @notif.DateEnvoi.ToString("dd/MM/yyyy à HH:mm")
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-bell-slash fa-2x text-muted mb-2"></i>
                            <p class="text-muted">Aucune notification pour ce colis</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
            @if (Model.Latitude != 0 && Model.Longitude != 0)
    {
        <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
        <script>
            var map = L.map('map').setView([@Model.Latitude, @Model.Longitude], 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);
            
            // Marqueur de position actuelle
            L.marker([@Model.Latitude, @Model.Longitude]).addTo(map)
                .bindPopup('Position actuelle du colis')
                .openPopup();
            
            @if (Model.LatitudeDepart != 0 && Model.LongitudeDepart != 0)
            {
                <text>
                // Marqueur de départ
                L.marker([@Model.LatitudeDepart, @Model.LongitudeDepart], {
                    icon: L.divIcon({
                        className: 'custom-div-icon',
                        html: '<i class="fas fa-map-marker-alt" style="color: #28a745; font-size: 24px;"></i>',
                        iconSize: [24, 24],
                        iconAnchor: [12, 24]
                    })
                }).addTo(map).bindPopup('Point de départ');
                </text>
            }
            
            @if (Model.LatitudeArrivee != 0 && Model.LongitudeArrivee != 0)
            {
                <text>
                // Marqueur d'arrivée
                L.marker([@Model.LatitudeArrivee, @Model.LongitudeArrivee], {
                    icon: L.divIcon({
                        className: 'custom-div-icon',
                        html: '<i class="fas fa-flag-checkered" style="color: #ffc107; font-size: 24px;"></i>',
                        iconSize: [24, 24],
                        iconAnchor: [12, 24]
                    })
                }).addTo(map).bindPopup('Point d\'arrivée');
                </text>
            }
        </script>
    }
}

@functions {
    private string GetStatusColor(string statut)
    {
        return statut switch
        {
            "En attente" => "bg-warning",
            "En cours" => "bg-info",
            "Livré" => "bg-success",
            "Annulé" => "bg-danger",
            _ => "bg-secondary"
        };
    }
} 